
pkgname=mingw-w64-openblas
pkgrel=1
pkgver=0.2.11
pkgdesc="An optimized BLAS library based on GotoBLAS2 1.13 BSD (mingw-w64)"
arch=('any')
url="http://www.openblas.net/"
license=('custom')
options=('!buildflags' '!strip' 'staticlibs')
depends=("mingw-w64-crt")
makedepends=("mingw-w64-gcc")
provides=("mingw-w64-blas")
conflicts=("mingw-w64-blas")
source=(http://github.com/xianyi/OpenBLAS/archive/v${pkgver}.tar.gz)
md5sums=('c456f3c5e84c3ab69ef89b22e616627a')
_architectures="i686-w64-mingw32 x86_64-w64-mingw32"

prepare () {
  cd "${srcdir}/OpenBLAS-${pkgver}"
  sed -i "s|libs netlib tests shared|libs netlib shared|g" Makefile
  sed -i "s|-lib /machine|#-lib /machine|g" exports/Makefile
}

build () {
  cd "$srcdir"
  unset LDFLAGS
  NPROC=`grep "physical id" /proc/cpuinfo|sort|uniq|wc -l`
  NCORE4PROC=`grep "cores" /proc/cpuinfo|sort|tail -n 1|sed -e 's/cpu cores.*: //'`
  let NCORE=NPROC*NCORE4PROC

  export libprefix=libblas
  for _arch in ${_architectures}; do
    mkdir -p build-${_arch} && cp -r "$srcdir"/OpenBLAS-${pkgver}/* build-${_arch} && pushd build-${_arch}
    binary=32
    if test "${_arch}" = "x86_64-w64-mingw32"; then
      binary=64
    fi
    make CC=${_arch}-gcc FC=${_arch}-gfortran BINARY=$binary HOSTCC=gcc USE_OPENMP=1 NO_LAPACK=1 NUM_THREADS=$NCORE LIBPREFIX=$libprefix \
      MAJOR_VERSION=3 NO_CBLAS=1 NO_AFFINITY=1
    sed -i "1iLIBRARY $libprefix.dll\n" exports/libopenblas.def
    ${_arch}-dlltool -d exports/libopenblas.def -l $libprefix.dll.a
    popd
  done
}

package() {
  for _arch in ${_architectures}; do
    cd "${srcdir}/build-${_arch}"
    make PREFIX=${pkgdir}/usr/$_arch CC=${_arch}-gcc FC=${_arch}-gfortran BINARY=$bin HOSTCC=gcc NO_LAPACK=1 NO_CBLAS=1 LIBPREFIX=$libprefix install
    install -d "${pkgdir}"/usr/$_arch/bin
    install -m644 *.dll.a "${pkgdir}"/usr/${_arch}/lib
    ${_arch}-strip --strip-unneeded "$pkgdir"/usr/${_arch}/bin/*.dll
    ${_arch}-strip -g "$pkgdir"/usr/${_arch}/lib/*.a
  done
}

