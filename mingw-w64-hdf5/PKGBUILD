pkgname=mingw-w64-hdf5
pkgver=1.8.13
pkgrel=1
arch=('any')
pkgdesc="General purpose library and file format for storing scientific data (mingw-w64)"
url="http://www.hdfgroup.org/HDF5/"
license=('custom')
depends=('mingw-w64-crt' 'mingw-w64-zlib')
makedepends=('mingw-w64-cmake' 'wine')
options=('!strip' '!buildflags' 'staticlibs')
source=("ftp://ftp.hdfgroup.org/HDF5/current/src/hdf5-${pkgver/_/-}.tar.bz2"
	'hdf5-default-import-suffix.patch')
sha1sums=('712955025f03db808f000d8f4976b8df0c0d37b5'
	  '67dd865d0797deddfc2996c93e74b9843716a6e2')

_architectures="i686-w64-mingw32 x86_64-w64-mingw32"

prepare () {
  cd "$srcdir/hdf5-${pkgver/_/-}"

  # do not name import library .lib
  patch -p1 -i "$srcdir"/hdf5-default-import-suffix.patch

  # run exe through wine
  sed -i "s|set (CMD $<TARGET_FILE:H5|set (CMD wine $<TARGET_FILE:H5|g" src/CMakeLists.txt
  
  # rename X.dll to X-0.dll
  echo "if (BUILD_SHARED_LIBS)" >> CMakeLists.txt
  echo "set_target_properties (\${HDF5_LIB_TARGET} PROPERTIES SUFFIX -0.dll)">> CMakeLists.txt
  echo "set_target_properties (\${HDF5_HL_LIB_TARGET} PROPERTIES SUFFIX -0.dll)">> CMakeLists.txt
  echo "endif ()" >> CMakeLists.txt
}

build() {
  cd "$srcdir/hdf5-${pkgver/_/-}"
  for _arch in $_architectures; do
    unset LDFLAGS
    mkdir -p build-${_arch}-static && pushd build-${_arch}-static
    ${_arch}-cmake \
      -DBUILD_SHARED_LIBS=OFF \
      -DHDF5_BUILD_HL_LIB=ON \
      -DHAVE_IOEO_EXITCODE=1 \
      -DHDF5_PRINTF_LL_TEST=1 \
      -DH5_LDOUBLE_TO_INTEGER_WORKS=1 \
      -DH5_ULONG_TO_FLOAT_ACCURATE=1 \
      -DH5_LDOUBLE_TO_UINT_ACCURATE=1 \
      -DH5_FP_TO_ULLONG_ACCURATE=1 \
      -DH5_ULLONG_TO_LDOUBLE_PRECISION=1 \
      -DH5_FP_TO_INTEGER_OVERFLOW_WORKS=1 \
      -DH5_LDOUBLE_TO_LLONG_ACCURATE=1 \
      -DH5_LLONG_TO_LDOUBLE_CORRECT=1 \
      -DH5_NO_ALIGNMENT_RESTRICTIONS=1 \
      -DHDF5_PRINTF_LL_TEST_RUN=1 \
      -DHDF5_PRINTF_LL_TEST_COMPILE=1 \
      -DHDF5_PRINTF_LL_TEST_RUN__TRYRUN_OUTPUT=1 \
      ..
    make
    popd
    mkdir -p build-${_arch} && pushd build-${_arch}
    ${_arch}-cmake \
      -DHDF5_BUILD_HL_LIB=ON \
      -DHAVE_IOEO_EXITCODE=1 \
      -DHDF5_PRINTF_LL_TEST=1 \
      -DH5_LDOUBLE_TO_INTEGER_WORKS=1 \
      -DH5_ULONG_TO_FLOAT_ACCURATE=1 \
      -DH5_LDOUBLE_TO_UINT_ACCURATE=1 \
      -DH5_FP_TO_ULLONG_ACCURATE=1 \
      -DH5_ULLONG_TO_LDOUBLE_PRECISION=1 \
      -DH5_FP_TO_INTEGER_OVERFLOW_WORKS=1 \
      -DH5_LDOUBLE_TO_LLONG_ACCURATE=1 \
      -DH5_LLONG_TO_LDOUBLE_CORRECT=1 \
      -DH5_NO_ALIGNMENT_RESTRICTIONS=1 \
      -DHDF5_PRINTF_LL_TEST_RUN=1 \
      -DHDF5_PRINTF_LL_TEST_COMPILE=1 \
      -DHDF5_PRINTF_LL_TEST_RUN__TRYRUN_OUTPUT=1 \
      ..
    make
    popd
  done
}

package() {
  for _arch in $_architectures; do
    cd "$srcdir/hdf5-${pkgver/_/-}/build-${_arch}-static"
    make DESTDIR="${pkgdir}" install
    cd "$srcdir/hdf5-${pkgver/_/-}/build-${_arch}"
    make DESTDIR="${pkgdir}" install
    rm "$pkgdir"/usr/${_arch}/*.txt
    ${_arch}-strip --strip-unneeded "$pkgdir"/usr/${_arch}/bin/*.dll
    ${_arch}-strip -g "$pkgdir"/usr/${_arch}/lib/*.a
  done
}

