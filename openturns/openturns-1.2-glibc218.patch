Index: lib/src/Base/Common/WrapperCommonFunctions.cxx
===================================================================
--- lib/src/Base/Common/WrapperCommonFunctions.cxx	(revision 3272)
+++ lib/src/Base/Common/WrapperCommonFunctions.cxx	(revision 3273)
@@ -349,10 +349,10 @@
 
 /* Some functions that help debugging memory allocation */
 /* Allocate SIZE bytes of memory.  */
-__malloc_ptr_t dbg_malloc __MALLOC_P ((int line,
-                                       size_t __size))
+void* dbg_malloc __MALLOC_P ((int line,
+                              size_t __size))
 {
-  __malloc_ptr_t ptr = malloc(__size);
+  void* ptr = malloc(__size);
   if (ptr) memset(ptr, 0, __size);
 #ifdef DEBUG
   printToLogDebug( "(malloc) line %d : ptr=%d size=%d", line, ptr, __size );
@@ -364,11 +364,11 @@
 
 
 /* Allocate NMEMB elements of SIZE bytes each, all initialized to 0.  */
-__malloc_ptr_t dbg_calloc __MALLOC_P ((int line,
-                                       size_t __nmemb,
-                                       size_t __size))
+void* dbg_calloc __MALLOC_P ((int line,
+                              size_t __nmemb,
+                              size_t __size))
 {
-  __malloc_ptr_t ptr = calloc(__nmemb, __size);
+  void* ptr = calloc(__nmemb, __size);
   if (ptr) memset(ptr, 0, __nmemb * __size);
   if (Log::HasDebug()) printToLogDebug( "(calloc) line %d : ptr=%p nmemb=%d size=%d", line, ptr, __nmemb, __size );
   return ptr;
@@ -379,11 +379,11 @@
 
 /* Re-allocate the previously allocated block in __ptr, making the new
    block SIZE bytes long.  */
-__malloc_ptr_t dbg_realloc __MALLOC_P ((int line,
-                                        __malloc_ptr_t __ptr,
-                                        size_t __size))
+void* dbg_realloc __MALLOC_P ((int line,
+                               void* __ptr,
+                               size_t __size))
 {
-  __malloc_ptr_t ptr = realloc(__ptr, __size);
+  void* ptr = realloc(__ptr, __size);
   if (Log::HasDebug()) printToLogDebug( "(realloc) line %d : ptr=%p __ptr=%p size=%d", line, ptr, __ptr, __size );
   return ptr;
 }
@@ -393,7 +393,7 @@
 
 /* Free a block allocated by `malloc', `realloc' or `calloc'.  */
 void dbg_free __MALLOC_P ((int line,
-                           __malloc_ptr_t __ptr))
+                           void* __ptr))
 {
   if (Log::HasDebug()) printToLogDebug( "(free) line %d : ptr=%p", line, __ptr );
   free(__ptr);
Index: lib/src/Base/Common/WrapperCommonFunctions.hxx
===================================================================
--- lib/src/Base/Common/WrapperCommonFunctions.hxx	(revision 3272)
+++ lib/src/Base/Common/WrapperCommonFunctions.hxx	(revision 3273)
@@ -69,8 +69,7 @@
 #define FSLOCK(code) code
 #endif
 
-#if defined(__CYGWIN__) || defined(WIN32) || defined(__APPLE__)
-#define __malloc_ptr_t void*
+#if !defined(__MALLOC_P)
 #define __MALLOC_P(args) args
 #endif
 
@@ -101,17 +100,17 @@
 
 /* Some functions that help debugging memory allocation */
 /* Allocate SIZE bytes of memory.  */
-extern __malloc_ptr_t dbg_malloc __MALLOC_P ((int line, size_t __size)) UNUSED;
+extern void* dbg_malloc __MALLOC_P ((int line, size_t __size)) UNUSED;
 
 /* Allocate NMEMB elements of SIZE bytes each, all initialized to 0.  */
-extern __malloc_ptr_t dbg_calloc __MALLOC_P ((int line, size_t __nmemb, size_t __size)) UNUSED;
+extern void* dbg_calloc __MALLOC_P ((int line, size_t __nmemb, size_t __size)) UNUSED;
 
 /* Re-allocate the previously allocated block in __ptr, making the new
    block SIZE bytes long.  */
-extern __malloc_ptr_t dbg_realloc __MALLOC_P ((int line, __malloc_ptr_t __ptr, size_t __size)) UNUSED;
+extern void* dbg_realloc __MALLOC_P ((int line, void* __ptr, size_t __size)) UNUSED;
 
 /* Free a block allocated by `malloc', `realloc' or `calloc'.  */
-extern void dbg_free __MALLOC_P ((int line, __malloc_ptr_t __ptr)) UNUSED;
+extern void dbg_free __MALLOC_P ((int line, void* __ptr)) UNUSED;
 
 
 #ifdef DEBUG_MEMORY
