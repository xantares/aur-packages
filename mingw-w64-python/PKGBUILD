# Maintainer: xantares <xantares09 at hotmail dot com>

_pkgname=python
pkgname=mingw-w64-$_pkgname
pkgver=3.3.0
pkgrel=1
_pybasever=3.3
pkgdesc="Next generation of the python high-level scripting language (mingw-w64)"
arch=('any')
license=('custom')
url="http://www.python.org/"
depends=('mingw-w64-crt' 'mingw-w64-expat' 'mingw-w64-bzip2' 'mingw-w64-gdbm' 'mingw-w64-openssl' 'mingw-w64-libffi' 'mingw-w64-zlib')
makedepends=('mingw-w64-gcc' 'mingw-w64-expat' 'mingw-w64-bzip2' 'mingw-w64-gdbm' 'mingw-w64-openssl' 'mingw-w64-libffi' 'mingw-w64-zlib')
options=('!makeflags' '!libtool' '!buildflags' '!strip')
source=("http://www.python.org/ftp/python/${pkgver%rc*}/Python-${pkgver}.tar.xz"
        'crucifixion-freedom-python.tar.gz')
sha1sums=('SKIP'
# '87009d0c156c6e1354dfec5c98c328cae93950ad'
          '94deaebee05d1b2f4435ef67747a9558f484d555')
_architectures="i686-w64-mingw32 x86_64-w64-mingw32"

prepare() {
  cd "${srcdir}/Python-${pkgver}"
  rm -f Misc/python-config.sh.in
  patch -Np1 -i "${srcdir}"/3.3.0/0000-add-python-config-sh.patch
  patch -Np1 -i "${srcdir}"/3.3.0/0005-cross-fixes.patch || echo "OK"
  patch -Np1 -i "${srcdir}"/3.3.0/0030-py3k-20121004-MINGW.patch || echo "~"
  patch -Np1 -i "${srcdir}"/3.3.0/0031-py3k-20121004-MINGW-removal-of-pthread-patch.patch
  patch -Np1 -i "${srcdir}"/3.3.0/0032-py3k-20121004-MINGW-ntthreads.patch
  patch -Np1 -i "${srcdir}"/3.3.0/0033-py3k-mingw-ntthreads-vs-pthreads.patch
  patch -Np1 -i "${srcdir}"/3.3.0/0034-py3k-20121004-MINGW-removal-of-libffi-patch.patch
  patch -Np1 -i "${srcdir}"/3.3.0/0035-mingw-system-libffi.patch
  patch -Np1 -i "${srcdir}"/3.3.0/0045-mingw-use-posix-getpath.patch || echo "~"
  patch -Np1 -i "${srcdir}"/3.3.0/0050-mingw-sysconfig-like-posix.patch
  patch -Np1 -i "${srcdir}"/3.3.0/0055-mingw-_winapi_as_builtin_for_Popen_in_cygwinccompiler.patch
   sed -i "s|__USE_MINGW_ANSI_STDIO|__MINGW32__|g" "${srcdir}"/3.3.0/0060-mingw-x86_64-size_t-format-specifier-pid_t.patch
  patch -Np1 -i "${srcdir}"/3.3.0/0060-mingw-x86_64-size_t-format-specifier-pid_t.patch
  patch -Np1 -i "${srcdir}"/3.3.0/0065-cross-dont-add-multiarch-paths-if-cross-compiling.patch
  patch -Np1 -i "${srcdir}"/3.3.0/0070-mingw-use-backslashes-in-compileall-py.patch
  patch -Np1 -i "${srcdir}"/3.3.0/0075-msys-convert_path-fix-and-root-hack.patch || echo "1/3"
  patch -Np1 -i "${srcdir}"/3.3.0/0080-mingw-hack-around-double-copy-scripts-issue.patch
  patch -Np1 -i "${srcdir}"/3.3.0/0085-allow-static-tcltk.patch
  patch -Np1 -i "${srcdir}"/3.3.0/0090-CROSS-avoid-ncursesw-include-path-hack.patch
  patch -Np1 -i "${srcdir}"/3.3.0/0091-CROSS-properly-detect-WINDOW-_flags-for-different-nc.patch
  patch -Np1 -i "${srcdir}"/3.3.0/0092-mingw-pdcurses_ISPAD.patch
  patch -Np1 -i "${srcdir}"/3.3.0/0095-no-xxmodule-for-PYDEBUG.patch
  patch -Np1 -i "${srcdir}"/3.3.0/0100-grammar-fixes.patch || echo "1/2"
  patch -Np1 -i "${srcdir}"/3.3.0/0105-builddir-fixes.patch || echo "1/2"
  patch -Np1 -i "${srcdir}"/3.3.0/0110-msys-monkeypatch-os-system-via-sh-exe.patch
  patch -Np1 -i "${srcdir}"/3.3.0/0115-msys-replace-slashes-used-in-io-redirection.patch

  autoreconf -vfi
  
  
  # FS#23997
  sed -i -e "s|^#.* /usr/local/bin/python|#!/usr/bin/python|" Lib/cgi.py

  # Ensure that we are using the system copy of various libraries (expat, zlib and libffi),
  # rather than copies shipped in the tarball
  rm -r Modules/expat
  rm -r Modules/zlib
#   rm -r Modules/_ctypes/{darwin,libffi}*
#   rm -f Lib/test/nullbytecert.pem
#   patch -Np1 -i ../python-3.3.2-CVE-2013-2099.patch
#   patch -Np1 -i ../python-3.3.2-CVE-2013-4238.patch
  

  
}

build() {
  cd "${srcdir}/Python-${pkgver}"
  unset LDFLAGS
  for _arch in ${_architectures}; do
    mkdir -p "build-${_arch}" && pushd "build-${_arch}"
    cp /usr/${_arch}/bin/libwinpthread*.dll .
    export PKG_CONFIG_LIBDIR=/usr/${_arch}/lib/pkgconfig/
    ../configure \
	      --prefix=/usr/${_arch} \
	      --host=${_arch} \
	      --build=$CHOST \
              --enable-shared \
              --with-threads \
              --with-computed-gotos \
              --with-system-expat \
              --with-dbmliborder=gdbm:ndbm \
              --with-system-ffi
#               --enable-ipv6 \
    
    make
    popd
  done
}

# check() {
#   cd "${srcdir}/Python-${pkgver}"
#   LD_LIBRARY_PATH="${srcdir}/Python-${pkgver}":${LD_LIBRARY_PATH} \
#      "${srcdir}/Python-${pkgver}/python" -m test.regrtest -x test_posixpath test_logging
# }

package() {
  for _arch in ${_architectures}; do
    cd "${srcdir}/Python-${pkgver}/build-${_arch}"
    make install DESTDIR="$pkgdir"
    install -m 644 libpython${_pybasever}.dll.a "$pkgdir"/usr/${_arch}/lib
    rm -rf "$pkgdir"/usr/${_arch}/share
    ${_arch}-strip --strip-unneeded "$pkgdir"/usr/${_arch}/bin/*.dll
    ${_arch}-strip -g "$pkgdir"/usr/${_arch}/lib/*.a
  done
# 
# 
#   cd "${srcdir}/Python-${pkgver}"
#   make DESTDIR="${pkgdir}" install maninstall
# 
#   # Why are these not done by default...
#   ln -sf python3               "${pkgdir}"/usr/bin/python
#   ln -sf python3-config        "${pkgdir}"/usr/bin/python-config
#   ln -sf idle3                 "${pkgdir}"/usr/bin/idle
#   ln -sf pydoc3                "${pkgdir}"/usr/bin/pydoc
#   ln -sf python${_pybasever}.1 "${pkgdir}"/usr/share/man/man1/python3.1
#   ln -sf python${_pybasever}.1 "${pkgdir}"/usr/share/man/man1/python.1
# 
#   # Fix FS#22552
#   ln -sf ../../libpython${_pybasever}m.so \
#     "${pkgdir}/usr/lib/python${_pybasever}/config-${_pybasever}m/libpython${_pybasever}m.so"
# 
#   # Clean-up reference to build directory
#   sed -i "s|$srcdir/Python-${pkgver}:||" "$pkgdir/usr/lib/python${_pybasever}/config-${_pybasever}m/Makefile"

}
